<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;

namespace ExtraLinq
{
    public static partial class ExtraEnumerable
    {
<# string[] types = {"int", "uint", "long", "ulong", "float", "double"};
		foreach (var type in types) {#>
        public static double Average(this <#= type #>[] source)
        {
            if (source == null) throw Error.ArgumentNull(nameof(source));

            <# GetType(type); #> sum = 0;
            long count = 0;

            foreach (var i in source)
            {
                checked
                {
                    sum += i;
					count++;
                }
            }

            if (count > 0)
            {
                return (double)sum / count;
            }

            throw Error.NoElements();
        }

        public static double? Average(this <#= type #>?[] source)
        {
            if (source == null) throw Error.ArgumentNull(nameof(source));

            <# GetType(type); #> sum = 0;
            long count = 0;

            foreach (var i in source)
            {
                if (i.HasValue)
                {
                    checked
                    {
                        sum += i.Value;
					    count++;
                    }
                }
            }

            if (count > 0)
            {
                return (double)sum / count;
            }

            throw Error.NoElements();
        }

        public static double Average(this List<<#= type #>> source)
        {
            if (source == null) throw Error.ArgumentNull(nameof(source));

            <# GetType(type); #> sum = 0;
            long count = 0;

            foreach (var i in source)
            {
                checked
                {
                    sum += i;
					count++;
                }
            }

            if (count > 0)
            {
                return (double)sum / count;
            }

            throw Error.NoElements();
        }

        public static double? Average(this List<<#= type #>?> source)
        {
            if (source == null) throw Error.ArgumentNull(nameof(source));

            <# GetType(type); #> sum = 0;
            long count = 0;

            foreach (var i in source)
            {
                if (i.HasValue)
                {
                    checked
                    {
                        sum += i.Value;
					    count++;
                    }
                }
            }

            if (count > 0)
            {
                return (double)sum / count;
            }

            throw Error.NoElements();
        }
<# } #>
    }
}<#+ public void GetType(string type) {
	if (type == "float" || type == "double") {
		Write("double");
	}
	else if (type == "decimal") {
		Write("decimal");
	}
	else if (type == "int" || type == "long") {
		Write("long");
	}
	else {
		Write("ulong");
	}
} #>